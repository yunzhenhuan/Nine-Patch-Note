<%@include%>和<jsp:include>的区别，发现了一些东西的。

<%@include%>：页面请求之前预编译，所有代码包含进来之后，一起进行处理，把所有代码合在一起，编译成一个servlet
<jsp:include>：所有代码分别处理，在页面被请求的时候才编译，被编译成多个servlet，页面语法相对独立，处理完成之后再将代码的显示结果（处理结果）组合进来。

JSP中的两种包含页面的方法
第一种：include指令：当JSP转换成Servlet时引入指定文件
<%@ pagecontentType="text/html;charset=GB2312" language="java"errorPage=""%>
<%@ include file="head.jsp"%>
<%@ include file="body.jsp"%>
<%@ include file="tail.jsp"%>
第二种：<jsp:include>动作元素：当JSP页面被请求时引入指定文件
<%@ page contentType="text/html; charset=GB2312"language="java" errorPage=""%>
<jsp:include page="head.jsp"/>
<jsp:include page="body.jsp"/>
<jsp:include page="tail.jsp"/>
第二种方法可以很方便的用<jsp:param>来向所包含页传递参数，方法如下：
<%@ page contentType="text/html; charset=GB2312"language="java" errorPage=""%>
<jsp:include page="head.jsp"/>
<jsp:includepage="body.jsp">
<jsp:param name="uid"value="username"/>
<jsp:param name="pwd"value="password"/>
</jsp:include>
<jsp:includepage="tail.jsp"/>

<jsp:include> ：动态包含
 
第一种情况（<jsp:include>包含的是html文件）：
DynamicInclude.jsp:
<%@pagecontentType="text/html;charset=gb2312"%>
<html>
         <head>
                   <title>动态包含</title>
         </head>
         <bodystyle="background-color:lightblue">
 
                   <jsp:include page="header.html"flush="true"/><!--动态包含-->
 
                   <tableborder="1" align="center">
                            <tr>
                                     <td>姓名</td><td>性别</td><td>年龄</td><td>爱好</td>
                            </tr>
                            <tr>
                                     <td>a</td><td>b</td><td>c</td><td>d</td>
                            </tr>
                   </table>
         </body>
</html>
 
Header.html ：
<h2style="font-family:arial;color:red;font-size:25px;text-align:center">
         动态包含的标题(HTML)
</h2>
 
运行之后，只生成一个servlet，和上面的代码对应如下：
  out.write("\r\n");
     out.write("<html>\r\n");
     out.write("\t<head>\r\n");
     out.write("\t\t<title>动态包含</title>\r\n");
     out.write("\t</head>\r\n");
     out.write("\t<bodystyle=\"background-color:lightblue\">\r\n");
     out.write("\r\n");
     out.write("\t\t");
     <span style="color:#ff0000;">org.apache.jasper.runtime.JspRuntimeLibrary.include(request,response, "header.html", out, true);</span>
     out.write("<!--动态包含-->\r\n");
     out.write("\r\n");
     out.write("\t\t<table border=\"1\"align=\"center\">\r\n");
     out.write("\t\t\t<tr>\r\n");
     out.write("\t\t\t\t<td>姓名</td><td>性别</td><td>年龄</td><td>爱好</td>\r\n");
     out.write("\t\t\t</tr>\r\n");
     out.write("\t\t\t<tr>\r\n");
     out.write("\t\t\t\t<td>a</td><td>b</td><td>c</td><td>d</td>\r\n");
     out.write("\t\t\t</tr>\r\n");
     out.write("\t\t</table>\r\n");
     out.write("\t</body>\r\n");
     out.write("</html>");
 
第二种情况（<jsp:include>包含的是jsp文件）：
DynamicInclude.jsp:
<%@pagecontentType="text/html;charset=gb2312"%>
<html>
         <head>
                   <title>动态包含</title>
         </head>
         <bodystyle="background-color:lightblue">
 
                   <jsp:include page="header.jsp"flush="true"/><!--动态包含-->
 
                   <tableborder="1" align="center">
                            <tr>
                                     <td>姓名</td><td>性别</td><td>年龄</td><td>爱好</td>
                            </tr>
                            <tr>
                                     <td>a</td><td>b</td><td>c</td><td>d</td>
                            </tr>
                   </table>
         </body>
</html>
Header.jsp ：
<%@pagecontentType="text/html;charset=gb2312"%>
<html>
         <body>
                   <h2style="font-family:arial;color:red;font-size:25px;text-align:center">
                            动态包含的标题(JSP)
                   </h2>
         </body>
</html>
运行之后，生成了两个servlet：DynamicInclude_jsp.java和header_jsp.java，这也是为什么 Header.jsp中要写上<%@page contentType="text/html;charset=gb2312"%>和完整的<html></html>和<body></body>，而Header.html不用写的原因。因为前者两个.jsp文件是两个相互独立的整体，它们之间的关系是通过request和reponse来发生的，而后者只是简单的嵌套。两个servlet对应的代码如下：

DynamicInclude_jsp.java：
     out.write("\r\n");
     out.write("<html>\r\n");
     out.write("\t<head>\r\n");
     out.write("\t\t<title>动态包含</title>\r\n");
     out.write("\t</head>\r\n");
     out.write("\t<bodystyle=\"background-color:lightblue\">\r\n");
     out.write("\r\n");
     out.write("\t\t");
     <span style="color:#ff0000;">org.apache.jasper.runtime.JspRuntimeLibrary.include(request,response, "header.jsp", out, true);</span>
     out.write("<!--动态包含-->\r\n");
     out.write("\r\n");
     out.write("\t\t<table border=\"1\"align=\"center\">\r\n");
     out.write("\t\t\t<tr>\r\n");
     out.write("\t\t\t\t<td>姓名</td><td>性别</td><td>年龄</td><td>爱好</td>\r\n");
     out.write("\t\t\t</tr>\r\n");
     out.write("\t\t\t<tr>\r\n");
     out.write("\t\t\t\t<td>a</td><td>b</td><td>c</td><td>d</td>\r\n");
     out.write("\t\t\t</tr>\r\n");
     out.write("\t\t</table>\r\n");
     out.write("\t</body>\r\n");
     out.write("</html>");
header_jsp.java:    
     out.write("\r\n");
     out.write("<html>\r\n");
     out.write("\t<body>\r\n");
     out.write("\t\t<h2 style=\"font-family:arial;color:red;font-size:25px;text-align:center\">\r\n");
     out.write("\t\t\t动态包含的标题(JSP)\r\n");
     out.write("\t\t</h2>\r\n");
     out.write("\t</body>\r\n");
     out.write("</html>");
 
<%@include%>：静态包含
第一种情况：<%@include%>包含的是jsp文件。
StaticInclude.jsp:
<%@pagecontentType="text/html;charset=gb2312"%>
<html>
         <head>
                   <title>静态包含</title>
         </head>
         <bodystyle="background-color:lightblue">
 
                   <%@include file="header.jsp"%><!--静态包含-->
                   <tableborder="1" align="center">
                            <tr>
                                     <td>姓名</td><td>性别</td><td>年龄</td><td>爱好</td>
                            </tr>
                            <tr>
                                     <td>a</td><td>b</td><td>c</td><td>d</td>
                            </tr>
                   </table>
         </body>
</html>
header.jsp:
<%@pagecontentType="text/html;charset=gb2312"%>
<h2style="font-family:arial;color:red;font-size:25px;text-align:center">
         静态包含的标题(JSP)
</h2>
 
运行之后，只生成一个servlet，和上面的代码对应如下：
 out.write("\r\n");
     out.write("<html>\r\n");
     out.write("\t<head>\r\n");
     out.write("\t\t<title>静态包含</title>\r\n");
     out.write("\t</head>\r\n");
     out.write("\t<body style=\"background-color:lightblue\">\r\n");
     out.write("\r\n");
     out.write("\t\t");
     out.write("\r\n");
     <span style="color:#ff0000;">out.write("<h2style=\"font-family:arial;color:red;font-size:25px;text-align:center\">\r\n");
     out.write("\t静态包含的标题(JSP)\r\n");
     out.write("</h2>");</span>
     out.write("<!--静态包含-->\r\n");
     out.write("\t\t<table border=\"1\"align=\"center\">\r\n");
     out.write("\t\t\t<tr>\r\n");
     out.write("\t\t\t\t<td>姓名</td><td>性别</td><td>年龄</td><td>爱好</td>\r\n");
     out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
     out.write("\t\t\t\t<td>a</td><td>b</td><td>c</td><td>d</td>\r\n");
     out.write("\t\t\t</tr>\r\n");
     out.write("\t\t</table>\r\n");
     out.write("\t</body>\r\n");
     out.write("</html>");
 
第二种情况：<%@include%>包含的是html文件。
StaticInclude.jsp:
<%@pagecontentType="text/html;charset=gb2312"%>
<html>
         <head>
                   <title>静态包含</title>
         </head>
         <bodystyle="background-color:lightblue">
 
                   <%@include file="header.html"%><!--静态包含-->
                   <tableborder="1" align="center">
                            <tr>
                                     <td>姓名</td><td>性别</td><td>年龄</td><td>爱好</td>
                            </tr>
                            <tr>
                                     <td>a</td><td>b</td><td>c</td><td>d</td>
                            </tr>
                   </table>
         </body>
</html>
header.html:
<%@pagecontentType="text/html;charset=gb2312"%>
<h2style="font-family:arial;color:red;font-size:25px;text-align:center">
         静态包含的标题(HTML)
</h2>
运行之后，也是只生成一个servlet，和上面的代码对应如下：
 out.write("\r\n");
     out.write("<html>\r\n");
     out.write("\t<head>\r\n");
     out.write("\t\t<title>静态包含</title>\r\n");
     out.write("\t</head>\r\n");
     out.write("\t<bodystyle=\"background-color:lightblue\">\r\n");
     out.write("\r\n");
     out.write("\t\t");
     out.write("\r\n");
     <span style="color:#ff0000;">out.write("<h2style=\"font-family:arial;color:red;font-size:25px;text-align:center\">\r\n");
     out.write("\t静态包含的标题(HTML)\r\n");
     out.write("</h2>");</span>
     out.write("<!--静态包含-->\r\n");
     out.write("\t\t<table border=\"1\"align=\"center\">\r\n");
     out.write("\t\t\t<tr>\r\n");
     out.write("\t\t\t\t<td>姓名</td><td>性别</td><td>年龄</td><td>爱好</td>\r\n");
     out.write("\t\t\t</tr>\r\n");
     out.write("\t\t\t<tr>\r\n");
     out.write("\t\t\t\t<td>a</td><td>b</td><td>c</td><td>d</td>\r\n");
     out.write("\t\t\t</tr>\r\n");
     out.write("\t\t</table>\r\n");
     out.write("\t</body>\r\n");
     out.write("</html>");
 
由上可以总结出：
对于静态包含，<%@include%>，中包含的文件，只是简单的嵌入到主文件中，就是在jsp页面转化成Servlet时才嵌入到主文件中，因为运行的结果是只生成了一个Servlet。
而对于动态包含<jsp:incude>，如果被包含文件是动态的，那么就会生成两个Servlet，也就是被包含文件也要经过jsp引擎编译执行生成一个Servlet，两个Servlet通过request和reponse进行通信。如果被包含的文件是静态的，那么这种情况和<%@include>就很相似，只生成了一个Servlet，但是他们之间没有进行简单的嵌入，而依然是通过request和reponse进行的通信。

